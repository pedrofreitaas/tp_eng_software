# Build stage
FROM python:3.13-alpine AS build

# Set working directory
WORKDIR /app

# Install Poetry
RUN pip install poetry

# Copy Poetry config files (dependency layer caching)
COPY pyproject.toml poetry.lock ./

# Configure Poetry to create virtual environments inside the container
RUN poetry config virtualenvs.create false

# Install dependencies (cached if pyproject.toml or poetry.lock don't change)
RUN poetry install --only main --no-root

# Runtime stage
FROM python:3.13-alpine AS runtime

# Set working directory
WORKDIR /app

# Copy dependencies from the build stage
COPY --from=build /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=build /usr/local/bin /usr/local/bin

# Copy application code
COPY ./src src

# Expose the application port
EXPOSE 8000

# Run the application
CMD ["uvicorn", "src.server:app", "--host", "0.0.0.0", "--port", "8000"]
